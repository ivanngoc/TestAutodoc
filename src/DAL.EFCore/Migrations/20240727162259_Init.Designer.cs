// <auto-generated />
using System;
using DAL.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.EFCore.Migrations
{
    [DbContext(typeof(TasksDbContext))]
    [Migration("20240727162259_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.EFCore.Meta", b =>
                {
                    b.Property<long>("MetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MetaId"));

                    b.Property<string>("FileDir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNameOriginal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUploaded")
                        .HasColumnType("bit");

                    b.Property<long>("LengthTotal")
                        .HasColumnType("bigint");

                    b.Property<long>("LengthUploaded")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("SomeTaskId")
                        .HasColumnType("bigint");

                    b.HasKey("MetaId");

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.HasIndex("SomeTaskId");

                    b.ToTable("Metas");
                });

            modelBuilder.Entity("DAL.EFCore.SomeTask", b =>
                {
                    b.Property<long>("SomeTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SomeTaskId"));

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SomeTaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("DAL.EFCore.Meta", b =>
                {
                    b.HasOne("DAL.EFCore.SomeTask", "SomeTask")
                        .WithMany("Files")
                        .HasForeignKey("SomeTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SomeTask");
                });

            modelBuilder.Entity("DAL.EFCore.SomeTask", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
